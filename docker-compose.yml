version: '3.8'

services:
  # Cache node 1 (seed node)
  cache-node1:
    build: .
    container_name: cache-node1
    hostname: cache-node1
    ports:
      - "8081:8081"
      - "9090:9090"
    environment:
      - NODE_ID=node1
      - LISTEN_PORT=8081
      - DATA_DIR=/opt/cache/data
      - CLUSTER_SEEDS=
    volumes:
      - cache-node1-data:/opt/cache/data
      - cache-node1-logs:/opt/cache/logs
      - ./config/node1.yaml:/opt/cache/config/cache_config.yaml
    networks:
      - cache-network
    command: [
      "/opt/cache/bin/cache_server",
      "--config", "/opt/cache/config/cache_config.yaml",
      "--node-id", "node1",
      "--port", "8081",
      "--data-dir", "/opt/cache/data"
    ]

  # Cache node 2
  cache-node2:
    build: .
    container_name: cache-node2
    hostname: cache-node2
    ports:
      - "8082:8082"
      - "9091:9090"
    environment:
      - NODE_ID=node2
      - LISTEN_PORT=8082
      - DATA_DIR=/opt/cache/data
      - CLUSTER_SEEDS=cache-node1:8081
    volumes:
      - cache-node2-data:/opt/cache/data
      - cache-node2-logs:/opt/cache/logs
      - ./config/node2.yaml:/opt/cache/config/cache_config.yaml
    networks:
      - cache-network
    depends_on:
      - cache-node1
    command: [
      "/opt/cache/bin/cache_server",
      "--config", "/opt/cache/config/cache_config.yaml",
      "--node-id", "node2",
      "--port", "8082",
      "--data-dir", "/opt/cache/data",
      "--seeds", "cache-node1:8081"
    ]

  # Cache node 3
  cache-node3:
    build: .
    container_name: cache-node3
    hostname: cache-node3
    ports:
      - "8083:8083"
      - "9092:9090"
    environment:
      - NODE_ID=node3
      - LISTEN_PORT=8083
      - DATA_DIR=/opt/cache/data
      - CLUSTER_SEEDS=cache-node1:8081,cache-node2:8082
    volumes:
      - cache-node3-data:/opt/cache/data
      - cache-node3-logs:/opt/cache/logs
      - ./config/node3.yaml:/opt/cache/config/cache_config.yaml
    networks:
      - cache-network
    depends_on:
      - cache-node1
      - cache-node2
    command: [
      "/opt/cache/bin/cache_server",
      "--config", "/opt/cache/config/cache_config.yaml",
      "--node-id", "node3",
      "--port", "8083",
      "--data-dir", "/opt/cache/data",
      "--seeds", "cache-node1:8081,cache-node2:8082"
    ]

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: cache-prometheus
    ports:
      - "9093:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - cache-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: cache-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - cache-network
    depends_on:
      - prometheus

# Load balancer (HAProxy)
  loadbalancer:
    image: haproxy:latest
    container_name: cache-loadbalancer
    ports:
      - "8080:8080"
      - "8404:8404"  # HAProxy stats
    volumes:
      - ./config/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    networks:
      - cache-network
    depends_on:
      - cache-node1
      - cache-node2
      - cache-node3
    command: ["haproxy", "-f", "/usr/local/etc/haproxy/haproxy.cfg"]

networks:
  cache-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  cache-node1-data:
  cache-node1-logs:
  cache-node2-data:
  cache-node2-logs:
  cache-node3-data:
  cache-node3-logs:
  prometheus-data:
  grafana-data: